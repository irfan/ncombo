var path = require('path');

var PathManager = new (function() {
	var self = this;
	var _frameworkDirPath = null;
	var _appDirPath = null;
	var _frameworkURL = null;
	var _frameworkURLRegex = null;
	var _appDirRegex = null;
	var _frameworkDirRegex = null;
	
	self.toUnixSep = function(filePath) {
		return filePath.replace(/\\/g, '/');
	}
	
	self.init = function(frameworkURL, frameworkDirPath, appDirPath) {
		_frameworkDirPath = frameworkDirPath;
		_frameworkURL = frameworkURL;
		_frameworkURLRegex = new RegExp('^' + _frameworkURL);
		_frameworkDirRegex = new RegExp('^' + self.toUnixSep(_frameworkDirPath));
		_appDirPath = appDirPath;
		_appDirRegex =  new RegExp('^' + self.toUnixSep(_appDirPath));
	}
	
	self.getFrameworkPath = function() {
		return _frameworkDirPath;
	}
	
	self.getAppPath = function() {
		return _appDirPath;
	}
	
	self.urlToPath = function(url) {
		var filePath;
		if(_frameworkURLRegex.test(url)) {
			filePath = url.replace(_frameworkURLRegex, _frameworkDirPath + '/');
		} else {
			filePath = _appDirPath + '/' + url;
		}
		return path.normalize(filePath);
	}
	
	self.pathToURL = function(filePath) {
		filePath = self.toUnixSep(filePath);
		if(_appDirRegex.test(filePath)) {
			return filePath.replace(_appDirRegex, '');
		} else if(_frameworkDirRegex.test(filePath)) {
			return self.toUnixSep(path.normalize(_frameworkURL + filePath.replace(_frameworkDirRegex, '')));
		}
		
		return filePath;
	}
})();

module.exports = PathManager;
