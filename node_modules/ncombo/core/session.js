var NCOMBO_PORT = {{port}};
var NCOMBO_SOCKET = io.connect('{{endpoint}}');
var NCOMBO_CACHE_VERSION = {{cacheVersion}};

var IE = false;
var IE_VERSION = 0;

if(/MSIE (\d+\.\d+);/.test(navigator.userAgent)) {
	IE = true;
	IE_VERSION = new Number(RegExp.$1)
}

function setCookie(name, value, exdays) {
	var exdate = new Date();
	exdate.setDate(exdate.getDate() + exdays);
	var value = escape(value) + '; path=/;' + ((exdays == null) ? "" : " expires=" + exdate.toUTCString() + ";");
	document.cookie = name + "=" + value;
}

function getCookie(name) {
    var i, x, y, ARRcookies = document.cookie.split(";");
    for(i = 0; i < ARRcookies.length; i++) {
        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
        y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
        x = x.replace(/^\s+|\s+$/g, "");
        if(x == name) {
            return unescape(y);
        }
    }
}

var _getHTTPReqObject = function() {
	var xmlhttp = null;
	if(IE) {
		try {
			xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
		} catch (exceptionA) {
			try {
				xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
			} catch (exceptionB) {
				xmlhttp = null;
			}
		}
	}
	if (!xmlhttp && typeof XMLHttpRequest != 'undefined') {
		try {
			xmlhttp = new XMLHttpRequest();
		} catch (e) {
			xmlhttp = null;
		}
	}
	if(!xmlhttp) {
		throw "Could not instantiate XMLHttpRequest";
	}
	return xmlhttp;
}

var ajax = function(settings) {
	var type;
	if(settings.type) {
		type = settings.type;
	} else {
		type = "GET";
	}

	var xmlhttp = _getHTTPReqObject();
	xmlhttp.open(type, settings.url, true);
	xmlhttp.onreadystatechange = function() {
		if(xmlhttp.readyState == 4) {
			if(xmlhttp.status == 200) {
				if(settings.success) {
					settings.success(xmlhttp.responseText);
				}
			} else {
				if(settings.error) {
					settings.error(xmlhttp.statusText);
				} else {
					throw "Failed to load resource: " + url;
				}
			}
		}
	}
	xmlhttp.send();
}

var globalEval = function(src) {
	if(window.execScript) {
		window.execScript(src);
	} else {
		(function() {
			window.eval.call(window, src);
		})();
	}
}

var SmartCacheManager = function(cacheVersion) {
	var self = this;
	
	self.setURLCacheVersion = function(url) {
		var match = url.match(/(^[^?]*)(([?])(.*))?/);
	
		if(match) {
			var versionVar = 'cv';
			var mainPart = match[1];
			if(match[4]) {
				var fieldStrings = match[4].split('&');
				var temp;
				var fields = {};
				var i;
		
				for(i in fieldStrings) {
					temp = fieldStrings[i].split('=');
					fields[temp[0]] = temp[1] || true;
				}
		
				fields[versionVar] = cacheVersion;
		
				fieldStrings = [];
		
				for(i in fields) {
					fieldStrings.push(i + '=' + fields[i]);
				}
	
				return mainPart + '?' + fieldStrings.join('&');
			} else {
				return mainPart + '?' + versionVar + '=' + cacheVersion;
			}
		}
	
		throw new Error('Invalid url specified');
	}
}

var smartCacheManager = new SmartCacheManager(NCOMBO_CACHE_VERSION);

NCOMBO_SOCKET.on('connect', function() {
	var sessionID = NCOMBO_SOCKET.socket.sessionid;
	
	setCookie('sid', sessionID);
	
	var head = document.getElementsByTagName('head');
	if(head) {
		head = head[0];
	}
	
	var onScriptLoad = function(scriptTag, callback) {
		if(!IE || IE_VERSION > 8) {
			scriptTag.onload = function() {
				callback();
			}
		} else {
			scriptTag.onreadystatechange = function() {
				if(this.readyState == 'complete' || this.readyState == 'loaded') {
					callback();
				}
			}
		}
	}
	
	var nComboStyle = document.createElement('link');
	nComboStyle.rel = 'stylesheet';
	nComboStyle.type = 'text/css';
	nComboStyle.href = smartCacheManager.setURLCacheVersion('/node_modules/ncombo/styles/ncombo.css');
	
	var loadScript = document.createElement('script');
	loadScript.type = 'text/javascript';
	loadScript.src = smartCacheManager.setURLCacheVersion('/node_modules/ncombo/loader.js');
	
	var scriptLoaded = false;
	
	onScriptLoad(loadScript, function() {
		scriptLoaded = true;
	});
	
	NCOMBO_SOCKET.on('ready', function() {
		ajax({
			url: '/~startscript',
			success: function(loaderCode) {
				head.appendChild(nComboStyle);
				head.appendChild(loadScript);
				
				if(scriptLoaded) {
					globalEval(loaderCode);
				} else {
					onScriptLoad(loadScript, function() {
						globalEval(loaderCode);
					});
				}
			}
		});
	});
});
