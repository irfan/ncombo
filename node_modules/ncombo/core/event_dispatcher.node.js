var EventDispatcher = function() {
	var self = this;
	self._listeners = {};
	
	self.on = function(event, listener) {
		if(!self._listeners.hasOwnProperty(event)) {
			self._listeners[event] = {};
		}
		self._listeners[event][listener] = listener;
	}
	
	self.off = function(event, listener) {
		return self._listeners.hasOwnProperty(event) && self._listeners[event].hasOwnProperty(listener);
	}
	
	self.removeEventListener = function(event, listener) {
		if(self.willTrigger(event, listener)) {
			delete self._listeners[event][listener];
		}
	}
	
	self.dispatchEvent = function(event, eventData) {
		if(self._listeners.hasOwnProperty(event)) {
			var eventListeners = self._listeners[event];
			var i;
			for(i in eventListeners) {
				eventListeners[i](eventData);
			}
		}
	}
	
	self.numListeners = function(event) {
		if(self._listeners[event]) {
			var count = 0;
			var i;
			for(i in self._listeners[event]) {
				count++;
			}
			return count;
		}
		return 0;
	}
}

module.exports = EventDispatcher;